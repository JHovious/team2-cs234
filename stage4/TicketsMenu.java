
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author iamth
 */
public class TicketsMenu extends javax.swing.JFrame {

    private HashMap<Integer,TicketDB> tickets;
    private TicketDB newTicket;
    private boolean manager;
    
    
    /**
     * Creates new form Tickets
     */
    public TicketsMenu() {
        
        tickets = null;
        newTicket = null;
        manager = false;
    }
    
    public TicketsMenu(HashMap<Integer,TicketDB> ticketdb, boolean check){
        tickets = ticketdb;
        newTicket = null;
        manager = check;
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        pnlInfo = new javax.swing.JPanel();
        txtRecipient = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPriority = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTicket = new javax.swing.JTable();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Ticket Information"));

        jLabel2.setText("Recipient:");

        jLabel3.setText("Subject:");

        jLabel4.setText("Message:");

        jLabel5.setText("Priority:");

        txtPriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriorityActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel6.setText("Number:");

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMessage, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtRecipient)
                    .addComponent(txtSubject)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addComponent(txtPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear))
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRecipient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tblTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ticket Number", "Recipient", "Subject", "Priority"
            }
        ));
        tblTicket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTicketMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTicket);

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(51, 51, 51)
                .addComponent(btnUpdate)
                .addGap(51, 51, 51)
                .addComponent(btnDelete)
                .addGap(41, 41, 41))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(38, 38, 38))
        );

        jLabel1.setText("Tickets Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>                        

    private void txtPriorityActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        try{
            //Gets data from file
            BufferedReader reader = new BufferedReader(new FileReader("ticketdata.csv"));
            ArrayList<String> tableInfo = new ArrayList<>();
            String line;
            
            while ((line = reader.readLine()) != null){
                tableInfo.add(line);
            }
            reader.close();
            //Put data in table
            DefaultTableModel model = (DefaultTableModel)tblTicket.getModel();
            for(String rowInfo : tableInfo){
                String[] row = rowInfo.split(",");

                TicketDB ticket = new TicketDB(Integer.valueOf(row[0]), row[1], row[2], row[3], row[4]);
                tickets.put(Integer.valueOf(row[0]), ticket);
                String[] newRow = new String[] {row[0], row[1], row[2], row[3], row[4]};
                model.addRow(newRow);
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Data was not loaded correctly");
        }
    }                                 

    private void clearFields(){
        txtRecipient.setText("");
        txtSubject.setText("");
        txtMessage.setText("");
        txtPriority.setText("");
        txtNum.setText("");
    }
    
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        clearFields();
    }                                        

    private void tblTicketMouseClicked(java.awt.event.MouseEvent evt) {                                       
        int row = tblTicket.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblTicket.getModel();
        Integer key = Integer.valueOf(model.getValueAt(row, 0).toString());
        
        txtNum.setText(String.valueOf(key));
        txtRecipient.setText(tickets.get(key).getTicketRecipient());
        txtSubject.setText(tickets.get(key).getTicketSubject());
        txtMessage.setText(tickets.get(key).getTicketMessage());
        txtPriority.setText(tickets.get(key).getTicketPriority());
    }                                      

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        int row = tblTicket.getSelectedRow();
        if (row < 0){
            JOptionPane.showMessageDialog(this, "Choose a row");
            
        }else{
            if(manager){
                DefaultTableModel model = (DefaultTableModel)tblTicket.getModel();
                int key = Integer.valueOf(model.getValueAt(row, 0).toString());
                tickets.remove(key);
                model.removeRow(row);
                clearFields();
            }else{
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }
        }
    }                                         

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        int row = tblTicket.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(this, "Choose a ticket");
        }else{
            
            DefaultTableModel model = (DefaultTableModel)tblTicket.getModel();
            
            int key = Integer.valueOf(model.getValueAt(row, 0).toString());
            String recipient = txtRecipient.getText();
            String subject = txtSubject.getText();
            String message = txtMessage.getText();
            String priority = txtPriority.getText();
            int num = Integer.valueOf(txtNum.getText());
            
            
            tickets.get(key).setRecipient(recipient);
            tickets.get(key).setMessage(message);
            tickets.get(key).setPriority(priority);
            tickets.get(key).setSubject(subject);
            tickets.get(key).setNum(num);
            
            tickets.put(num, tickets.remove(key));
            updateTableInfo(model,num, recipient, subject, priority, row);
            
        }
    }                                         

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        //Checks if fields have information 
       if(txtNum.getText().isEmpty() || txtRecipient.getText().isEmpty() 
                || txtSubject.getText().isEmpty() || txtMessage.getText().isEmpty() 
                || txtPriority.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter information");
        }else{
            int num = Integer.valueOf(txtNum.getText());
            String recipient = txtRecipient.getText();
            String subject = txtSubject.getText();
            String message = txtMessage.getText();
            String priority = txtPriority.getText();
        
        
            boolean numCheck = true;
            //Need to check if ticket number already exists
            for(int key : tickets.keySet()){
                if(num == key){
                    numCheck = false;

                }
            }

            if(numCheck){
                TicketDB newTicket = new TicketDB(num, message, subject, priority, recipient);
                tickets.put(num, newTicket);

                DefaultTableModel model = (DefaultTableModel)tblTicket.getModel();
                String[] newRow = new String[]{String.valueOf(num), recipient, subject, priority};
                model.addRow(newRow);
            }else{
                JOptionPane.showMessageDialog(this, "Ticket Number Already Exists");
            }
        }
    }                                         

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
        ArrayList<String> tableInfo = new ArrayList<>();
        for(int key : tickets.keySet()){
            String recipient = tickets.get(key).getTicketRecipient();
            String subject = tickets.get(key).getTicketSubject();
            String message = tickets.get(key).getTicketMessage();
            String num = String.valueOf(key);
            String priority = tickets.get(key).getTicketPriority();
            String row = num + "," + message + "," + subject + "," + priority + "," + recipient;
            tableInfo.add(row);
            
        }
        
        try{
            PrintWriter writer = new PrintWriter(new FileWriter("ticketdata.csv"));
            for(String rowData : tableInfo){
                writer.println(rowData);
            }
            writer.close();
            
          
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Data not stored");
        }
    }                                  

    private void updateTableInfo(DefaultTableModel aModel, int aKey, String aRecipient, String aSubject, String aPriority, int aRow){
        DefaultTableModel model = aModel;
        model.setValueAt(aKey, aRow, 0);
        model.setValueAt(aRecipient, aRow, 1);
        model.setValueAt(aSubject, aRow, 2);
        model.setValueAt(aPriority, aRow, 3);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketsMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTable tblTicket;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtPriority;
    private javax.swing.JTextField txtRecipient;
    private javax.swing.JTextField txtSubject;
    // End of variables declaration                   
}
