
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * Christian Kurdi
 */

public class Inventory extends javax.swing.JFrame {

    
    private Integer itemNum = 1;
    private HashMap<Integer,InventoryDB> items;
    private HashMap<String, StaffDB> emp;
    private boolean manager;
    
    
    public Inventory(){
        items = null;
        manager = false;
        emp = null;
        
    }
    
    public Inventory(HashMap<String, StaffDB> employees,HashMap<Integer,InventoryDB>itemsDB, boolean managerCheck){
        emp = employees;
        manager = managerCheck;
        items = itemsDB;
        initComponents();
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        pnlInfo = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDetails = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtItemNum = new javax.swing.JTextField();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtDelete = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonCreate = new javax.swing.JButton();
        txtClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Information"));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel3.setText("Details");

        jLabel4.setText("Price");

        jLabel5.setText("Quantity");

        jLabel6.setText("Location");

        jLabel7.setText("Item #");

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDetails)
                    .addComponent(txtName)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnlInfoLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(30, 30, 30)
                                    .addComponent(jLabel6))
                                .addGroup(pnlInfoLayout.createSequentialGroup()
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(30, 30, 30))
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel2))
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel3))
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(txtItemNum, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtItemNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblItems.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Quantity", "Location", "Item #"
            }
        ));
        tblItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItems);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
        );

        jLabel1.setText("Inventory Menu");

        txtDelete.setText("Delete");
        txtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeleteActionPerformed(evt);
            }
        });

        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        buttonCreate.setText("Create");
        buttonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateActionPerformed(evt);
            }
        });

        txtClear.setText("Clear");
        txtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(pnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(buttonUpdate)
                        .addGap(44, 44, 44)
                        .addComponent(buttonCreate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtDelete)
                        .addGap(140, 140, 140))))
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(txtClear)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonUpdate)
                    .addComponent(txtDelete)
                    .addComponent(buttonCreate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtClear)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        setBounds(0, 0, 612, 432);
    }// </editor-fold>                        

    private void txtDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
    
        int row = tblItems.getSelectedRow();
        if (row < 0){
            JOptionPane.showMessageDialog(this, "Choose a row");
            
        }else{
            if(manager){
                DefaultTableModel model = (DefaultTableModel)tblItems.getModel();
                int key = Integer.valueOf(model.getValueAt(row, 4).toString());
                items.remove(key);
                model.removeRow(row);
                clearFields();
            }else{
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }
        }
    }                                         

    private void clearFields(){
        txtName.setText("");
        txtDetails.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
        txtLocation.setText("");
        txtItemNum.setText("");
    }
    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {                                        
   
    }                                       

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        try{
            //Gets data from file
            BufferedReader reader = new BufferedReader(new FileReader("inventorydata.csv"));
            ArrayList<String> tableInfo = new ArrayList<>();
            String line;
            
            while ((line = reader.readLine()) != null){
                tableInfo.add(line);
            }
            reader.close();
            
            //Put data in table
            DefaultTableModel model = (DefaultTableModel)tblItems.getModel();
            for(String rowInfo : tableInfo){
                String[] row = rowInfo.split(",");

                InventoryDB item = new InventoryDB(Integer.valueOf(row[4]), row[0], row[5], row[1], Integer.valueOf(row[2]), row[3]);
                items.put(Integer.valueOf(row[4]), item);
                String[] newRow = new String[] {row[0], row[1], row[2], row[3], row[4]};
                model.addRow(newRow);
            }
        }catch(Exception e){
            System.out.println("Error");
        }
    }                                 

    private void tblItemsMouseClicked(java.awt.event.MouseEvent evt) {                                      
        int row = tblItems.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblItems.getModel();
        Integer key = Integer.valueOf(model.getValueAt(row, 4).toString());
        
        txtName.setText(items.get(key).getName());
        txtDetails.setText(items.get(key).getDetails());
        txtPrice.setText(items.get(key).getPrice());
        txtQuantity.setText(String.valueOf(items.get(key).getQuantity()));
        txtLocation.setText(items.get(key).getLocation());
        txtItemNum.setText(String.valueOf(key));
        
    }                                     

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int row = tblItems.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblItems.getModel();
        
        String name = model.getValueAt(row, 0).toString();
        String price = model.getValueAt(row,1).toString();
        String quantity = model.getValueAt(row, 2).toString();
        String location = model.getValueAt(row, 3).toString();
        int key = Integer.valueOf(model.getValueAt(row, 4).toString());
        items.get(key).setName(txtName.getText());
        items.get(key).setPrice(txtPrice.getText());
        items.get(key).setQuantity(Integer.valueOf(txtQuantity.getText()));
        items.get(key).setLocation(txtLocation.getText());
        items.get(key).setDetails(txtDetails.getText());
        updateTableInfo(model,name, price, quantity, location, key, row);
    }                                            

    private void formWindowClosed(java.awt.event.WindowEvent evt) {                                  
        // TODO add your handling code here:
    }                                 

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
        ArrayList<String> tableInfo = new ArrayList<>();
        for(int key : items.keySet()){
            if(key != 0){
                String name = items.get(key).getName();
                String price = items.get(key).getPrice();
                String quantity = String.valueOf(items.get(key).getQuantity());
                String location = items.get(key).getLocation();
                String num = String.valueOf(key);
                String details = items.get(key).getDetails();
                String row = name + "," + price + "," + quantity + "," +location + "," +num + "," +details;
                tableInfo.add(row);
            }
            
        }
        
        try{
            PrintWriter writer = new PrintWriter(new FileWriter("inventorydata.csv"));
            for(String rowData : tableInfo){
                writer.println(rowData);
            }
            writer.close();
          
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Data not stored");
        }
    }                                  

    private void txtClearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        clearFields();
    }                                        

    private void buttonCreateActionPerformed(java.awt.event.ActionEvent evt) {                                             
        if(manager){
            if(txtName.getText().isEmpty() || txtDetails.getText().isEmpty() 
                    || txtPrice.getText().isEmpty() || txtQuantity.getText().isEmpty() 
                    || txtLocation.getText().isEmpty() || txtItemNum.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter information");
            }else{
                String name = txtName.getText();
                String details = txtDetails.getText();
                String price = txtPrice.getText();
                int quantity = Integer.valueOf(txtQuantity.getText());
                String location = txtLocation.getText();
                int itemNum = Integer.valueOf(txtItemNum.getText());

                boolean numCheck = true;
                //Need to check if item number already exists
                for(int key : items.keySet()){
                    if(itemNum == key){
                        numCheck = false;

                    }
                }

                if(numCheck){

                    InventoryDB newItem = new InventoryDB(itemNum, name, details, price, quantity, location);
                    items.put(itemNum, newItem);

                    DefaultTableModel model = (DefaultTableModel)tblItems.getModel();
                    String[] newRow = new String[]{name, price, String.valueOf(quantity), location, String.valueOf(itemNum)};
                    model.addRow(newRow);
                }else{
                    JOptionPane.showMessageDialog(this, "Item Number Already Exists");
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Invalid Credentials");
        }
    }                                            

    private void updateTableInfo(DefaultTableModel aModel, String aName, String aPrice, String aQuantity, String aLocation, int aKey, int aRow){
        DefaultTableModel model = aModel;
        model.setValueAt(items.get(aKey).getName(), aRow, 0);
        model.setValueAt(items.get(aKey).getPrice(), aRow, 1);
        model.setValueAt(items.get(aKey).getQuantity(), aRow, 2);
        model.setValueAt(items.get(aKey).getLocation(), aRow, 3);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton buttonCreate;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTable tblItems;
    private javax.swing.JButton txtClear;
    private javax.swing.JButton txtDelete;
    private javax.swing.JTextField txtDetails;
    private javax.swing.JTextField txtItemNum;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration                   
}
