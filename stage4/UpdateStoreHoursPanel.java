import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mayad
 */


public class UpdateStoreHoursPanel extends javax.swing.JFrame {

    /**
     * Creates new form UpdateStoreHoursPanel
     */
    
        private String name;
      private String storeAddress;
        private String hours;
        private String dataName;
        StoreInfo info = new StoreInfo();
    public UpdateStoreHoursPanel() {
        initComponents();
         dataName = "StoreInfo.csv";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        UpdateStoreNameTextField = new java.awt.TextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        UpdateStoreHoursInfoTable = new javax.swing.JTable();
        UpdateAddressTextField = new java.awt.TextField();
        updateStoreNameLabel = new javax.swing.JLabel();
        updateStoreAddressLabel = new javax.swing.JLabel();
        updateStoreHoursTextField = new java.awt.TextField();
        updateStoreHoursLabel = new javax.swing.JLabel();
        UpdateButton = new javax.swing.JButton();
        returnToMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText("Update Store Information");

        UpdateStoreNameTextField.setText("textField1");
        UpdateStoreNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateStoreNameTextFieldActionPerformed(evt);
            }
        });

        UpdateStoreHoursInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Store Name", "Store Address", "Store Hours"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UpdateStoreHoursInfoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateStoreHoursInfoTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(UpdateStoreHoursInfoTable);

        UpdateAddressTextField.setText("textField1");
        UpdateAddressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateAddressTextFieldActionPerformed(evt);
            }
        });

        updateStoreNameLabel.setText("Update Store Name");

        updateStoreAddressLabel.setText("Update Store Address");

        updateStoreHoursTextField.setText("textField1");
        updateStoreHoursTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStoreHoursTextFieldActionPerformed(evt);
            }
        });

        updateStoreHoursLabel.setText("Update Store Hours");

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        returnToMenuButton.setText("Return to Main Menu");
        returnToMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UpdateStoreNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UpdateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateStoreNameLabel)
                            .addComponent(updateStoreAddressLabel)
                            .addComponent(updateStoreHoursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateStoreHoursLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(UpdateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(returnToMenuButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(updateStoreNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateStoreNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(updateStoreAddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(updateStoreHoursLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateStoreHoursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UpdateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(returnToMenuButton)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(713, 432));
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void UpdateStoreNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        // TODO add your handling code here:
       try {
            System.out.println("Reading data");
            BufferedReader reader = new BufferedReader(new FileReader(dataName));
            ArrayList<String> tableData = new ArrayList<>();
            String line;
            while ((line = reader.readLine()) != null) {
                tableData.add(line);
            }
            reader.close();
            
            System.out.println(tableData);
            
            DefaultTableModel model = (DefaultTableModel)UpdateStoreHoursInfoTable.getModel();
            for (String rowData : tableData) {
                String [] row = rowData.split("\n");
                model.addRow(row);
            
            }
            JOptionPane.showMessageDialog(this, "Data loaded succesfully");
            
        }
        catch(Exception e) {
            System.out.println("Something went wrong");
        
        }
       
        UpdateStoreNameTextField.setText(info.getName());
        UpdateAddressTextField.setText(info.getAddress());
        updateStoreHoursTextField.setText(info.getHours());
        
    }                                 

    private void UpdateStoreHoursInfoTableMouseClicked(java.awt.event.MouseEvent evt) {                                                       
        // TODO add your handling code here:
         int row = UpdateStoreHoursInfoTable.getSelectedRow();
          System.out.println("Row " + row + "clicked");
          DefaultTableModel model = (DefaultTableModel) UpdateStoreHoursInfoTable.getModel();
          String value = (String) model.getValueAt(row, 0);
          System.out.println("To update " + value);
          //if (row == 4) {
              info.updateName(name); 
              UpdateStoreNameTextField.setText(info.getName());
          //}
          //else if(row == 5) {
              info.updateAddress(storeAddress);
              UpdateAddressTextField.setText(info.getAddress());
          
          //}
          //else if (row == 6) {
              info.updateHours(hours);
              updateStoreHoursTextField.setText(info.getHours());
          //}
    }                                                      

    private void UpdateAddressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void updateStoreHoursTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
         
        DefaultTableModel model = (DefaultTableModel) UpdateStoreHoursInfoTable.getModel();

    
        String newName = UpdateStoreNameTextField.getText();
        String newAddress = UpdateAddressTextField.getText();
        String newHours = updateStoreHoursTextField.getText();

   
        if (newName.isEmpty() || newAddress.isEmpty() || newHours.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill out all fields!");
            return;
        }

    // Update StoreInfo object
        info.updateName(newName);
        info.updateAddress(newAddress);
        info.updateHours(newHours);

        System.out.println("Updated Name: " + info.getName());
        System.out.println("Updated Address: " + info.getAddress());
        System.out.println("Updated Hours: " + info.getHours());

    
        model.setValueAt(newName, 0, 0);  // Update name at row 4, column 0
        model.setValueAt(newAddress, 1, 0);
        model.setValueAt(newHours, 2, 0);  // Update hours at row 6, column 0

    
        UpdateStoreHoursInfoTable.repaint();

   
        JOptionPane.showMessageDialog(this, "Table updated successfully!");
        
            //updateTableData(model, info, newName, newAddress, newHours);

          
        
    }                                            

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
       ArrayList<String> data = new ArrayList<>();
        System.out.println("Window is closing");

        // Get data from the StoreInfo object
        String name = info.getName();
        String address = info.getAddress();
        String hours = info.getHours();
        
        
        String row = name + "\n" + address + "\n" + hours;
        data.add(row);

        System.out.println(data);

        
        try (PrintWriter writer = new PrintWriter(new FileWriter(dataName))) {  
            for (String rowData : data) {
                writer.println(rowData);  
            }
            JOptionPane.showMessageDialog(null, "Data Saved");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "File error");
            
        }
        
        
    }                                  

    private void returnToMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        dispose();
        //new UserMenuFrame().setVisible(true);
    }                                                  
   public void updateTableData(DefaultTableModel theModel, StoreInfo info, 
                                           String nameText, String addressText, String hoursText) {
    DefaultTableModel model = theModel;

    
    model.setValueAt(nameText, 4, 0); 
    model.setValueAt(addressText, 5, 0);  
    model.setValueAt(hoursText, 6, 0);  

    
    info.updateName(nameText);
    info.updateAddress(addressText);
    info.updateHours(hoursText);


    UpdateStoreHoursInfoTable.repaint();
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateStoreHoursPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateStoreHoursPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateStoreHoursPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateStoreHoursPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateStoreHoursPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private java.awt.TextField UpdateAddressTextField;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTable UpdateStoreHoursInfoTable;
    private java.awt.TextField UpdateStoreNameTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton returnToMenuButton;
    private javax.swing.JLabel updateStoreAddressLabel;
    private javax.swing.JLabel updateStoreHoursLabel;
    private java.awt.TextField updateStoreHoursTextField;
    private javax.swing.JLabel updateStoreNameLabel;
    // End of variables declaration                   
}
